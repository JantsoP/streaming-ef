services:
    laravel.test:
        build:
            context: ./docker/8.4
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.4/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
            - '${REVERB_PORT:-8080}:${REVERB_SERVER_PORT:-8080}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - redis
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    origin:
        ports:
            - '1935:1935'
            - '8085:8080'
            - '1985:1985'
        image: ossrs/srs:6
        networks:
            - sail
        volumes:
            - $PWD/origin.conf:/usr/local/srs/conf/custom.conf:ro
            - srs-logs:/usr/local/srs/objs
        command: ./objs/srs -c /usr/local/srs/conf/custom.conf
    hls-edge:
        image: nginx:alpine
        container_name: hls-edge
        ports:
            - '${HLS_EDGE_PORT:-8083}:80'
        volumes:
            - './docker/nginx-hls/nginx.conf:/etc/nginx/nginx.conf:ro'
            - './docker/nginx-hls/index.html:/usr/share/nginx/html/index.html:ro'
            - 'nginx-cache:/var/cache/nginx'
        networks:
            - sail
        depends_on:
            - origin
        environment:
            - NGINX_HOST=${HLS_EDGE_HOST:-localhost}
            - NGINX_PORT=80
        healthcheck:
            test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
            interval: 10s
            timeout: 5s
            retries: 3
        restart: unless-stopped
networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    nginx-cache:
        driver: local
    srs-logs:
        driver: local
