services:
    laravel.test:
        build:
            context: ./docker/8.4
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.2/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - redis
            - reverb
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    reverb:
        build:
            context: ./docker/8.4
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.2/app
        working_dir: /var/www/html
        environment:
            REVERB_SERVER_HOST: '0.0.0.0'
            REVERB_SERVER_PORT: '${REVERB_SERVER_PORT:-8080}'
            REVERB_HOST: '${REVERB_HOST:-localhost}'
            REVERB_PORT: '${REVERB_PORT:-8080}'
            REVERB_SCHEME: '${REVERB_SCHEME:-http}'
            REVERB_APP_ID: '${REVERB_APP_ID:-${PUSHER_APP_ID}}'
            REVERB_APP_KEY: '${REVERB_APP_KEY:-${PUSHER_APP_KEY}}'
            REVERB_APP_SECRET: '${REVERB_APP_SECRET:-${PUSHER_APP_SECRET}}'
            REVERB_MAX_REQUEST_SIZE: '${REVERB_MAX_REQUEST_SIZE:-250000}'
            REVERB_APP_MAX_MESSAGE_SIZE: '${REVERB_APP_MAX_MESSAGE_SIZE:-100000}'
            REVERB_SCALING_ENABLED: '${REVERB_SCALING_ENABLED:-false}'
            REVERB_PULSE_INGEST_INTERVAL: '${REVERB_PULSE_INGEST_INTERVAL:-15}'
            REDIS_HOST: redis
            REDIS_PORT: 6379
        volumes:
            - '.:/var/www/html'
        ports:
            - '${REVERB_PORT:-8080}:${REVERB_SERVER_PORT:-8080}'
        networks:
            - sail
        depends_on:
            - redis
        command: php artisan reverb:start --host=0.0.0.0 --port=${REVERB_SERVER_PORT:-8080} --hostname=${REVERB_HOST:-localhost}
    stream:
        image: ossrs/srs:4
        ports:
            - '1935:1935'
            - '8080:8080'
        networks:
            - sail
        volumes:
            - $PWD/custom.conf:/usr/local/srs/conf/custom.conf
        command: ./objs/srs -c /usr/local/srs/conf/custom.conf
    origin:
        ports:
            - '1936:1935'
            - '8081:8080'
        image: ossrs/srs:4
        networks:
            - sail
        volumes:
            - $PWD/origin.conf:/usr/local/srs/conf/custom.conf
        command: ./objs/srs -c /usr/local/srs/conf/custom.conf
networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
