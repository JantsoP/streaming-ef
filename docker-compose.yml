services:
    laravel.test:
        build:
            context: ./docker/8.4
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.4/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
            # SUPERVISOR_PHP_COMMAND: "/usr/bin/php -d variables_order=EGPCS /var/www/html/artisan serve --host=0.0.0.0 --port=80"
        volumes:
            - '.:/var/www/html'
        network_mode: host
        depends_on:
            - mysql
            - redis
    mysql:
        image: 'mysql/mysql-server:8.0'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        network_mode: host
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        volumes:
            - 'sail-redis:/data'
        network_mode: host
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    origin-srs:
        image: ossrs/srs:5
        environment:
            SRS_HTTP_PORT: 8082
        network_mode: host
        volumes:
            - ./docker/origin-srs/origin.conf:/usr/local/srs/conf/custom.conf:ro
        command: ./objs/srs -c /usr/local/srs/conf/custom.conf
        depends_on:
            - laravel.test
        restart: unless-stopped
    # Nginx Edge Server - caches and serves HLS content from origin
    edge-nginx:
        image: nginx:alpine
        volumes:
            - ./docker/edge-nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - nginx-cache:/var/cache/nginx
            - nginx-logs:/var/log/nginx
        network_mode: host
        depends_on:
            - laravel.test
            - origin-srs
        healthcheck:
            test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8081/health"]
            interval: 10s
            timeout: 5s
            retries: 3
        restart: unless-stopped

    # Caddy - TLS termination for production
    edge-caddy:
        image: caddy:alpine
        environment:
            DOMAIN: '${APP_URL:-localhost}'
            CADDY_PORT: 8080
            NGINX_EDGE_PORT: 8081
        volumes:
            - ./docker/edge-caddy/Caddyfile:/etc/caddy/Caddyfile:ro
            - caddy-data:/data
            - caddy-config:/config
            - caddy-logs:/var/log/caddy
        network_mode: host
        restart: unless-stopped
volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    nginx-cache:
        driver: local
    nginx-logs:
        driver: local
    caddy-data:
        driver: local
    caddy-config:
        driver: local
    caddy-logs:
        driver: local
