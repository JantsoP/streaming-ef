# NGINX HLS Proxy with Authentication and Activity Tracking
# This configuration proxies HLS content with session-based authentication

# Define cache zones
proxy_cache_path /var/cache/nginx/hls levels=1:2 keys_zone=hls_cache:10m max_size=10g inactive=60m use_temp_path=off;
proxy_cache_path /var/cache/nginx/segments levels=1:2 keys_zone=segment_cache:50m max_size=50g inactive=60m use_temp_path=off;

# Upstream SRS origin servers
upstream srs_origin {
    server localhost:8080;  # Local SRS server
    keepalive 32;
}

# Define custom log format for HLS activity tracking
log_format hls_tracking '$remote_addr|$arg_session|$time_iso8601|$uri|$status|$arg_stream';

server {
    listen 80;
    listen [::]:80;
    server_name _;

    # SSL configuration (uncomment for production)
    # listen 443 ssl http2;
    # listen [::]:443 ssl http2;
    # ssl_certificate /etc/nginx/ssl/cert.pem;
    # ssl_certificate_key /etc/nginx/ssl/key.pem;
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers HIGH:!aNULL:!MD5;

    # CORS headers for cross-origin playback
    add_header Access-Control-Allow-Origin * always;
    add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, X-Session-Token" always;
    add_header Access-Control-Expose-Headers "X-Session-Token" always;

    # Handle OPTIONS requests
    if ($request_method = 'OPTIONS') {
        return 204;
    }

    # Authentication endpoint (internal)
    location = /auth {
        internal;
        proxy_pass http://localhost:8000/api/hls/auth;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Session-Token $arg_session;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # HLS master playlist (.m3u8)
    location ~ ^/live/([^/]+)/index\.m3u8$ {
        set $stream_name $1;
        
        # Validate session
        auth_request /auth;
        auth_request_set $auth_status $upstream_status;
        
        # Log activity for tracking
        access_log /var/log/nginx/hls_activity.log hls_tracking;
        
        # Proxy to SRS
        proxy_pass http://srs_origin$request_uri;
        
        # Cache settings for manifest files (short cache for live)
        proxy_cache hls_cache;
        proxy_cache_key $scheme$proxy_host$uri;
        proxy_cache_valid 200 302 2s;
        proxy_cache_valid 404 1s;
        proxy_cache_lock on;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        
        # Append session to .ts URLs in playlist
        sub_filter '.ts' '.ts?session=$arg_session&stream=$stream_name';
        sub_filter_once off;
        sub_filter_types application/vnd.apple.mpegurl;
        
        # Headers
        add_header Cache-Control "no-cache";
        add_header X-Cache-Status $upstream_cache_status;
        add_header X-Stream-Name $stream_name;
        
        # Proxy settings
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }

    # HLS variant playlists for different qualities
    location ~ ^/live/([^/]+)_(fhd|hd|sd|ld)/index\.m3u8$ {
        set $stream_name $1;
        set $quality $2;
        
        # Validate session
        auth_request /auth;
        
        # Log activity
        access_log /var/log/nginx/hls_activity.log hls_tracking;
        
        # Proxy to SRS
        proxy_pass http://srs_origin$request_uri;
        
        # Cache settings
        proxy_cache hls_cache;
        proxy_cache_key $scheme$proxy_host$uri;
        proxy_cache_valid 200 302 2s;
        proxy_cache_valid 404 1s;
        
        # Append session to .ts URLs
        sub_filter '.ts' '.ts?session=$arg_session&stream=$stream_name&quality=$quality';
        sub_filter_once off;
        sub_filter_types application/vnd.apple.mpegurl;
        
        # Headers
        add_header Cache-Control "no-cache";
        add_header X-Cache-Status $upstream_cache_status;
        add_header X-Stream-Quality $quality;
        
        # Proxy settings
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }

    # HLS segment files (.ts)
    location ~ ^/live/.*\.ts$ {
        # Validate session
        auth_request /auth;
        
        # Log segment requests (indicates active playback)
        access_log /var/log/nginx/hls_activity.log hls_tracking;
        
        # Proxy to SRS
        proxy_pass http://srs_origin$request_uri;
        
        # Cache settings for segments (longer cache)
        proxy_cache segment_cache;
        proxy_cache_key $scheme$proxy_host$uri;
        proxy_cache_valid 200 302 60m;
        proxy_cache_valid 404 10s;
        proxy_cache_lock on;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        
        # Headers
        add_header Cache-Control "public, max-age=3600";
        add_header X-Cache-Status $upstream_cache_status;
        
        # Proxy settings
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # Status endpoint for monitoring
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 10.0.0.0/8;  # Allow from private network
        deny all;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Session creation endpoint (public)
    location /api/hls/session {
        proxy_pass http://localhost:8000/api/hls/session;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
    }

    # Default location
    location / {
        return 404;
    }
}

# Logging
access_log /var/log/nginx/access.log combined;
error_log /var/log/nginx/error.log warn;