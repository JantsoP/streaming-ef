user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml application/atom+xml image/svg+xml 
               text/x-js text/x-cross-domain-policy application/x-font-ttf 
               application/x-font-opentype application/vnd.ms-fontobject 
               image/x-icon application/vnd.apple.mpegurl;

    # Proxy Cache Configuration
    proxy_cache_path /var/cache/nginx/hls levels=1:2 keys_zone=hls_cache:10m max_size=10g inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/hls_temp levels=1:2 keys_zone=hls_temp:1m max_size=100m inactive=10s use_temp_path=off;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=hls_limit:10m rate=100r/s;

    # Upstream to origin SRS server
    upstream srs_origin {
        server origin:8080;
        keepalive 32;
    }

    server {
        listen 80;
        server_name _;

        # Security headers (global)
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;

        # Root location with OPTIONS handling
        location / {
            # Handle OPTIONS requests (preflight)
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Range, Accept, Content-Type' always;
                add_header 'Access-Control-Max-Age' '86400' always;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' '0';
                return 204;
            }
            
            root /usr/share/nginx/html;
            index index.html;
        }

        # HLS master playlist (.m3u8) - short cache
        location ~ ^/live/.*\.m3u8$ {
            # Rate limiting
            limit_req zone=hls_limit burst=50 nodelay;

            # Proxy to origin
            proxy_pass http://srs_origin$request_uri;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Hide any CORS headers from upstream
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            proxy_hide_header Access-Control-Allow-Credentials;
            proxy_hide_header Access-Control-Expose-Headers;

            # Cache configuration for m3u8 files (short cache)
            proxy_cache hls_temp;
            proxy_cache_key $uri$is_args$args;
            proxy_cache_valid 200 302 1s;
            proxy_cache_valid 404 1s;
            proxy_cache_lock on;
            proxy_cache_lock_age 5s;
            proxy_cache_lock_timeout 5s;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update on;
            
            # Cache status header (for debugging)
            add_header X-Cache-Status $upstream_cache_status;
            add_header Cache-Control "no-cache";
            
            # Rewrite URLs in m3u8 files to use our edge server
            sub_filter_once off;
            sub_filter_types application/vnd.apple.mpegurl;
            # Replace any upstream server references with the current host
            sub_filter 'http://origin:8080' 'http://$http_host';
            sub_filter 'http://localhost:8080' 'http://$http_host';
            sub_filter 'http://stream:8080' 'http://$http_host';
            
            # CORS headers for m3u8 files
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Range, Accept, Content-Type' always;
            
            # MIME type
            add_header Content-Type "application/vnd.apple.mpegurl" always;
        }

        # HLS segments (.ts) - long cache
        location ~ ^/live/.*\.ts$ {
            # Rate limiting
            limit_req zone=hls_limit burst=100 nodelay;

            # Proxy to origin
            proxy_pass http://srs_origin$request_uri;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Hide any CORS headers from upstream
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            proxy_hide_header Access-Control-Allow-Credentials;
            proxy_hide_header Access-Control-Expose-Headers;

            # Cache configuration for ts files (long cache)
            proxy_cache hls_cache;
            proxy_cache_key $uri;
            proxy_cache_valid 200 302 60m;
            proxy_cache_valid 404 10s;
            proxy_cache_lock on;
            proxy_cache_lock_age 60s;
            proxy_cache_lock_timeout 60s;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            
            # Cache status header (for debugging)
            add_header X-Cache-Status $upstream_cache_status;
            add_header Cache-Control "public, max-age=3600";
            
            # CORS headers for ts files
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Range, Accept, Content-Type' always;
            
            # MIME type
            add_header Content-Type "video/mp2t" always;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Cache status endpoint (for monitoring)
        location /cache-status {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "Cache Status\n";
        }

        # Nginx status (for monitoring)
        location /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            deny all;
        }
    }
}